generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  email      String
  updatedAt DateTime   @updatedAt
  blogs     Blogs[]
  projects  Projects[]
  linkProjects LinkProject[]
}

model Blogs {
  blogId     String   @id @default(uuid())
  title       String
  content     String?
  description String?
  tags        String[]
  imageUrl   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String?
  user        User?    @relation(fields: [userId], references: [id])
}

model Projects {
  projectId String   @id @default(uuid())
  title      String
  imageUrl   String?
  content    Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String?
  user       User?    @relation(fields: [userId], references: [id])
}

model LinkProject {
  linkProjectId String   @id @default(uuid())
  title      String
  type   String?
  imageUrl   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String?
  user       User?    @relation(fields: [userId], references: [id])

  links     Link[]
  
}

model Link {
  linkId String   @id @default(uuid())
  title      String
  type   String?
  url   String?
  imageUrl   String?
  content    String?
  sort   Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  linkProjectId     String?
  linkProject       LinkProject?    @relation(fields: [linkProjectId], references: [linkProjectId])

   linkTags     LinkTag[]
  
}

model LinkTag {
  linkTagId String @id @default(uuid())
  tag        String
  type   String?
  url   String?
  sort   Int?
  xPosition   String?
  yPosition   String?
  linkId     String
  link       Link @relation(fields: [linkId], references: [linkId])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}